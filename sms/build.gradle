apply plugin: 'com.android.application'
apply plugin: "org.jetbrains.kotlin.android"

//apply plugin: 'com.getkeepsafe.dexcount'

android {
    namespace("com.walhalla.smsregclient")
    dexOptions {
        javaMaxHeapSize "4g"
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        r0 {
            keyAlias 'release'
            keyPassword 'release'
            storeFile file('D:\\walhalla\\sign\\sms\\sms_keystore.jks')
            storePassword 'release'
        }
    }

    compileSdk 35
    buildToolsVersion '35.0.0'

    def versionPropsFile = file('D:\\walhalla\\sign\\sms\\version.properties')
    Properties versionProps = new Properties()

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            multiDexEnabled = false
            resConfigs "ru", "en"

//            vectorDrawables {
//                useSupportLibrary = true
//            }
//            vectorDrawables.useSupportLibrary = true


            applicationId "com.walhalla.smsregclient"

            minSdkVersion rootProject.minSdkVersion0
            targetSdkVersion rootProject.targetSdkVersion0

            versionCode code
            versionName "1.3." + code + ".release"

            setProperty("archivesBaseName", "SmsregClient")
            //signingConfig signingConfigs.config
        }


    } else {
        throw new GradleException("Could not read version.properties!")
    }

//    defaultConfig {
//        javaCompileOptions {
//            annotationProcessorOptions {
//                includeCompileClasspath = true
//            }
//        }
//    }
    buildTypes {
        debug {
            multiDexEnabled true
            debuggable true
            jniDebuggable true

            //buildDir = "../buildD"
            buildConfigField "String", "CLIENT_CODE", /*'""'*/ '"' + versionProps['USER_API_KEY'].toString() + '"'


            // to debug ProGuard rules
//            multiDexEnabled true
//            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-debug.pro'
            signingConfig signingConfigs.r0
        }

        release {


            //useProguard false // <-- disable proguard
            //minifyEnabled false
            minifyEnabled true // <-- enable minification
            shrinkResources true

            //proguardFiles getDefaultProguardFile('proguard-android.txt'), "proguard-rules.pro"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.r0

            //dimension "mode"
            //proguard-android.txt
            //proguard-android-optimize.txt
            multiDexEnabled true
            //buildDir = "../buildR"
            buildConfigField "String", "CLIENT_CODE", '""'//__ENTER_API_KEY_HERE__
        }
    }

    buildFeatures {
        viewBinding = true
        buildConfig = true
    }

    flavorDimensions = ['store'] //"api",


    productFlavors {
//        dev {
//            // Assigns this product flavor to the "mode" flavor dimension.
//            dimension "mode"
//        }
//
//
//        full {
//
//            dimension "mode"
//            applicationIdSuffix ".pro"
//            versionNameSuffix "-pro"
//            multiDexEnabled false
//            applicationId 'com.psyberia.sms_regcom'
//            signingConfig signingConfigs.config
//        }
        walhalla {
            dimension 'store'
            minSdkVersion rootProject.minSdkVersion
        }
        googleplay {
            dimension 'store'
            minSdkVersion rootProject.minSdkVersion
        }
//        amazon {
//            dimension 'store'
//            minSdkVersion rootProject.minSdkVersion
//        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation libs.androidx.preference
    //    implementation 'com.google.firebase:firebase-core:15.0.2'
    //    implementation('com.google.firebase:firebase-ads:15.0.1') {
    //        exclude group: 'com.android.support'
    //    }
    //    implementation("com.google.android.gms:play-services-ads:$GOO") {
    //        exclude group: 'com.android.support'
    //    }
    //    implementation 'com.google.firebase:firebase-messaging:15.0.2'
    //    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    //        exclude group: 'com.android.support', module: 'support-annotations'
    //    })
    //implementation project(path: ':viberposter')

    //implementation project(path: ':core')
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout

    //implementation "com.android.support:support-vector-drawable:28.0.0"

    //implementation 'io.reactivex:rxandroid:1.0.1'

    //implementation 'io.reactivex:rxjava:1.0.14'

    //implementation 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta2'
    implementation libs.retrofit
    implementation libs.converter.gson

    implementation libs.androidx.cardview
//    implementation 'com.google.firebase:firebase-messaging:20.0.0'
    implementation libs.firebase.core
    implementation libs.firebase.ads

    //implementation 'com.google.android.gms:play-services-gcm:10.2.4'

//implementation 'com.google.android.gms:play-services-ads:10.2.4'
//    implementation ('com.arello-mobile:moxy-app-compat:1.5.6') {
//        transitive = false
//    }

    //androidX
    //implementation 'tech.schoolhelper:moxy-x-app-compat:1.7.0'
    implementation libs.moxy.x.androidx
    implementation libs.moxy.x
    implementation libs.androidx.swiperefreshlayout
    annotationProcessor libs.moxy.x.compiler

//    implementation 'com.arello-mobile:moxy:1.5.6'
//        transitive = false
//    }
//    annotationProcessor 'com.arello-mobile:moxy-compiler:1.5.6'

    implementation libs.dagger
    annotationProcessor libs.dagger.compiler

//    implementation 'com.orhanobut:logger:2.2.0'
//    implementation 'com.squareup.okhttp3:logging-interceptor:4.0.0'

//    implementation 'org.jetbrains:annotations:16.0.1'
//    implementation ('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
//        transitive = true
//    }

    implementation project(path: ':features:ui')
    //implementation project(path: ':threader')
    //implementation project(path: ':wads')


    //    debugImplementation project(path: ':library', configuration: 'default')
    //    releaseImplementation project(path: ':library', configuration: 'default')
    //    devImplementation project(path: ':library', configuration: 'default')
    //    fullImplementation project(path: ':library', configuration: 'default')

    //implementation project(':library')
    //implementation project(path: ':library')


    implementation(libs.proguard.annotations)

    // https://mvnrepository.com/artifact/com.infstory/proguard-annotations
    //implementation group: 'com.infstory', name: 'proguard-annotations', version: '1.0.2'

    implementation libs.toasty

    implementation libs.androidx.multidex
    implementation libs.androidx.lifecycle.viewmodel
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.1.0'
}

apply plugin: 'com.google.gms.google-services'
